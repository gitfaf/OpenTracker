@using OpenTracker.Core.Account
@model List<OpenTracker.Models.Tracker.TorrentModel>

@{
	Layout = "~/Views/Shared/_Layout.cshtml";

	Response.Write(Account.UserId);
}
@section jqueryload{
	<script src="/Content/js/jquery.autocomplete.js"></script>
	<script src="/Content/js/localdata.js"></script>
	<script type="text/javascript">
		$().ready(function () {
			$("#search").focus().autocomplete("/Browse/AutoSuggest").setOptions({
				max: 5,
				delay: 0
			});

			$("#clear").click(function () {
				$(":input").unautocomplete();
				alert($("#search").val());
			});
		});
		
		function retrievejson(torrentid) {
			$("#json_files").empty();
			$.getJSON('@Url.Action("RetrieveTorrentFiles", "Browse")?torrentid=' + torrentid, function (data) {
				var items = [];

				// items.push('<li>' + data + '</li>');
				$.each(data.files, function (i, file) {
					// $("<img>").attr("src", file.filename).appendTo("#images");
					items.push('<li>' + file.filename + ' ' + file.filesize + '</li>');
				});

				$('<ul/>', {
					'class': 'my-new-list',
					html: items.join('')
				}).appendTo('#json_files');
			});
		}

	</script>
}

<input id="search" class="input-medium" type="text" name="name" />
<a href="#" class="medium-button"><span>Filter Torrents</span></a>
<div class="result"></div>
<span class="small dark-grey left-padding">About 110,000 results (0.26 seconds)</span>
<div id="torrents">
	<ul class="torrent-list">
	@{
		if (Model.Count == 0)
		{
		<p>Sry, no torrents yet. LOLS.</p>
		}
		else
		{
			foreach (var torrent in Model)
			{
				var size = OpenTracker.Core.Common.Calculation.FormatBytes(torrent.Size);
		<li>
			<div class="container">
				<ul>
					<li class="torrent-icon"><img style="margin:0 6px 0 2px;" src="../Content/images/picture.png" alt="Placeholder" /></li>
					<li class="torrent-name">
						<a title="View Torrent" href="/torrent/view/">@torrent.TorrentName</a>
						<div style="display:block" class=""><a class="small-download" href="/download/@torrent.TorrentId/">DL</a><span class="small light-grey">Uploaded 35 minutes ago</span></div>
					</li>
					<li class="torrent-size">@size</li>
					<li class="torrent-snatched">@torrent.Snatches</li>
					<li class="torrent-leechers">@torrent.Leechers</li>
					<li class="torrent-seeders">@torrent.Seeders</li>
					<li class="torrent-uploader"><a href="#" class="small-button"><span>@torrent.Uploader</span><span class="arrow"></span></a></li>
				</ul>
			</div>
		</li>
			}
		}
	}
	</ul>
</div>

		<div>
		
<table width="100%" height="100%" style="border: 1px solid #000;">
	<tr>
		<td>category</td>
		<td>torrent name</td>
		<td id="files">files</td>
		<td>comments</td>
		<td>size</td>
		<td>snatches</td>
		<td>seeders</td>
		<td>leechers</td>
		<td>uploader</td>
	</tr>


		
			@{
				if (Model.Count == 0)
				{
		<p>Sry, no torrents yet. LOLS.</p>
				}
				else
				{
					foreach (var torrent in Model)
					{
						var size = OpenTracker.Core.Common.Calculation.FormatBytes(torrent.Size);
			<tr onclick="retrievejson(@torrent.TorrentId)">
				<td>@torrent.CategoryId</td>
				<td><a href="/download/@torrent.TorrentId/">@torrent.TorrentName</a></td>
				<td>@torrent.FileCount</td>
				<td>@torrent.CommentCount</td>
				<td>@size</td>
				<td>@torrent.Snatches</td>
				<td>@torrent.Seeders</td>
				<td>@torrent.Leechers</td>
				<td>@torrent.Uploader</td>
			</tr>
					}



				}
}
</table>
<div id="json_files"></div>

		</div>
